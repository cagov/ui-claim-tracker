// Generated by ts-to-zod
import { z } from 'zod'
import { TextOptionalLink } from './common'

export const i18nStringSchema = z.string()

export const apiGatewayDateStringSchema = z.string()

export const transLineContentSchema = z.object({
  i18nKey: i18nStringSchema,
  links: z.array(i18nStringSchema).optional(),
})

export const textOptionalLinkSchema: z.ZodSchema<TextOptionalLink> = z.lazy(() =>
  z.object({
    text: z.string(),
    links: z.array(z.string()).optional(),
    subBullets: z.array(textOptionalLinkSchema).optional(),
  }),
)

export const pendingDeterminationSchema = z.object({
  pendingDate: z.string(),
  scheduleDate: z.string(),
  timeSlotDesc: z.string(),
  requestDate: z.string(),
  determinationStatus: z.union([z.string(), z.null(), z.undefined()]).optional(),
  willCallIndicator: z.boolean(),
  spokenLanguageCode: z.string(),
  spokenLanguageDesc: z.string(),
})

export const claimDetailsResultSchema = z.object({
  programType: z.string(),
  benefitYearStartDate: z.string(),
  benefitYearEndDate: z.string(),
  claimBalance: z.number(),
  weeklyBenefitAmount: z.number(),
  lastPaymentIssued: z.string(),
  lastPaymentAmount: z.number(),
  monetaryStatus: z.string(),
})

export const claimSchema = z.object({
  ClaimType: z.union([z.null(), z.undefined(), z.string()]).optional(),
  uniqueNumber: z.union([z.null(), z.string()]).optional(),
  claimDetails: z.union([z.null(), claimDetailsResultSchema]).optional(),
  hasPendingWeeks: z.union([z.null(), z.undefined(), z.boolean()]).optional(),
  hasCertificationWeeksAvailable: z.union([z.null(), z.undefined(), z.boolean()]).optional(),
  pendingDetermination: z.union([z.null(), z.array(pendingDeterminationSchema)]).optional(),
})

export const timeSlotSchema = z.object({
  rangeStart: z.number(),
  rangeEnd: z.number(),
})

export const appointmentContentSchema = z.object({
  date: z.date(),
  timeSlot: timeSlotSchema.optional(),
})

export const claimSummaryContentSchema = z.object({
  paragraphs: z.array(transLineContentSchema),
  appointment: z.union([z.null(), appointmentContentSchema]),
})

export const claimStatusContentSchema = z.object({
  heading: i18nStringSchema,
  summary: claimSummaryContentSchema,
  yourNextSteps: z.array(z.union([transLineContentSchema, z.array(transLineContentSchema)])),
  eddNextSteps: z.array(z.union([transLineContentSchema, z.array(transLineContentSchema)])),
})

export const claimDetailsContentSchema = z.object({
  programType: z.string(),
  benefitYear: z.string(),
  claimBalance: z.union([z.string(), z.null()]),
  weeklyBenefitAmount: z.union([z.string(), z.null()]),
  lastPaymentIssued: z.union([z.string(), z.null()]),
  extensionType: z.string(),
})

export const scenarioContentSchema = z.object({
  statusContent: claimStatusContentSchema,
  detailsContent: z.union([z.null(), claimDetailsContentSchema]),
})
